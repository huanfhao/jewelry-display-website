// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 添加反向关联
  orders    Order[]
  addresses Address[]
  cartItems CartItem[]
}

// 产品表
model Product {
  id          String      @id @default(cuid())
  name        String      @unique
  description String
  price       Float
  images      String[]
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  String
  stock       Int
  isFeatured  Boolean     @default(false)
  orderItems  OrderItem[]
  cartItems   CartItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

// 分类表
model Category {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// 订单表
model Order {
  id             String      @id @default(cuid())
  userId         String
  total          Float
  status         OrderStatus @default(PENDING)
  shippingName   String
  shippingPhone  String
  shippingAddress String
  note           String?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  // 关联
  user           User        @relation(fields: [userId], references: [id])
  items          OrderItem[]

  @@index([userId])
}

// 订单项表
model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}

// 地址表
model Address {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  name      String
  phone     String
  province  String
  city      String
  district  String
  address   String
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

// 购物车项表
model CartItem {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, productId])
  @@index([userId])
  @@index([productId])
}

// 订单状态枚举
enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum UserRole {
  ADMIN
  USER
}

// 联系消息表
model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
